$date
	Tue Jan 14 10:54:15 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 1 ! running $end
$var wire 8 " result [7:0] $end
$var reg 1 # enable $end
$scope module uut $end
$var wire 1 # enable $end
$var wire 1 $ fusion_enable $end
$var wire 8 % result [7:0] $end
$var wire 1 ! running $end
$var wire 8 & div_result [7:0] $end
$var wire 1 ' div_done $end
$var wire 1 ( clk $end
$var reg 8 ) ar1 [7:0] $end
$var reg 8 * ar2 [7:0] $end
$var reg 8 + arr [7:0] $end
$var reg 1 , div_reset $end
$var reg 1 - div_start $end
$var reg 1 . enable_clk $end
$var reg 6 / operation_alu [5:0] $end
$var reg 8 0 reader [7:0] $end
$var integer 32 1 line [31:0] $end
$scope module CLOCK_GEN $end
$var wire 1 $ enable $end
$var parameter 32 2 DUTY $end
$var parameter 32 3 FREQ $end
$var parameter 32 4 PHASE $end
$var reg 1 ( clk $end
$var reg 1 5 start_clk $end
$var real 1 6 clk_off $end
$var real 1 7 clk_on $end
$var real 1 8 clk_pd $end
$var real 1 9 quarter $end
$var real 1 : start_dly $end
$upscope $end
$scope module DIV $end
$var wire 8 ; a [7:0] $end
$var wire 8 < b [7:0] $end
$var wire 1 ( clk $end
$var wire 1 , reset $end
$var wire 1 - start $end
$var reg 4 = count [3:0] $end
$var reg 1 ' done $end
$var reg 8 > quotient [7:0] $end
$var reg 16 ? remainder [15:0] $end
$var reg 8 @ result [7:0] $end
$var reg 1 A running $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b0 4
b11000011010100000 3
b110010 2
$end
#0
$dumpvars
xA
bx @
bx ?
bx >
bx =
b1010 <
b1111 ;
r0 :
r2.5 9
r10 8
r5 7
r5 6
05
b100 1
b10 0
b0 /
1.
0-
0,
b11001 +
b1010 *
b1111 )
0(
x'
bx &
b11001 %
1$
1#
b11001 "
1!
$end
#10000
b1111 "
b1111 %
b1111 +
b11110000 )
b11110000 ;
b111 /
b111 1
b1 0
0(
